# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: testsuite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: 10.x
  DOCKER_REPO: sheltertechsf/askdarcel-web

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - run: npm ci
      - run: cp config.example.yml config.yml
      - run: npm run lint

  test_unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - run: npm ci
      - run: cp config.example.yml config.yml
      - run: npm run test

  publish-latest:
    runs-on: ubuntu-latest
    needs: [test_unit, lint]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - run: echo "{}" > version.json
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - run: npm ci
      - run: cp config.example.yml config.yml
      - run: CONFIG_YAML=config.docker.yml npm run build
      - uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ${{ env.DOCKER_REPO }}:latest
      - run: echo ${{ steps.docker_build.outputs.digest }}

  # test_e2e:
  #   runs-on: ubuntu-latest
  #   env:
  #     SAUCE_MASTER_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  #     SAUCE_MASTER_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  #   services:
  #     db:
  #       image: postgres:9.5
  #       ports: ['5432:5432']
  #       env:
  #         POSTGRES_HOST_AUTH_METHOD: trust
  #     api:
  #       image: sheltertechsf/askdarcel-api:latest
  #       credentials:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #       ports: ['3000:3000']
  #       # options: --entrypoint "/sbin/my_init && bundle install"
  #       env:
  #         DATABASE_URL: 'postgres://postgres@127.0.0.1/askdarcel_development'
  #         TEST_DATABASE_URL: 'postgres://postgres@127.0.0.1/askdarcel_test'
  #         SECRET_KEY_BASE: notasecret
  #         # ALGOLIA_APPLICATION_ID: $ALGOLIA_APPLICATION_ID
  #         # ALGOLIA_API_KEY: $ALGOLIA_API_KEY
  #         # ALGOLIA_INDEX_PREFIX: $ALGOLIA_INDEX_PREFIX
  #         RAILS_ENV: development
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #     - uses: actions/cache@v2
  #       with:
  #         path: ~/.npm
  #         key: npm-${{ hashFiles('package-lock.json') }}
  #         restore-keys: npm-
  #     # - uses: docker/login-action@v1
  #     #   with:
  #     #     username: ${{ secrets.DOCKER_USERNAME }}
  #     #     password: ${{ secrets.DOCKER_PASSWORD }}
  #     # - run: docker run -d -e DATABASE_URL=postgres://postgres@localhost:5432/askdarcel_development -e TEST_DATABASE_URL=postgres://postgres@localhost:5432/askdarcel_test -e SECRET_KEY_BASE=notasecret --name=api -p 3000:3000 sheltertechsf/askdarcel-api:latest bash -c 'bundle install --with=development && bundle exec rake db:setup db:populate && bundle exec rails server --binding=0.0.0.0'
  #     - run: npm ci
  #     - run: cp config.example.yml config.yml
  #     # - run: TESTCAFE_RUNNING=true npm run dev &
  #     # - run: sleep 60
  #     - run: docker exec "${{ job.services.api.id }}" bash -c "bundle install --with=development && bundle exec rake db:setup db:populate && bundle exec rails server --binding=0.0.0.0"
  #     - run: docker logs "${{ job.services.api.id }}"
  #     - run: npm run build
  #     - run: npx http-server ./build -p 8080 &
  #     - uses: DevExpress/testcafe-action@latest
  #       with:
  #         skip-install: true
  #         args: 'chrome:headless testcafe/*.js -c 3 --skip-js-errors   --assertion-timeout 50000 --page-load-timeout 15000 --selector-timeout 15000'
  #     # - run: ./travis-testcafe.sh
