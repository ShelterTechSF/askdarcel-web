name: publish-release

on:
  push:
    tags:
      - "*"

env:
  NODE_VERSION: 18.x
  GCP_REPO: us-west2-docker.pkg.dev/askdarcel-184805/sheltertech/askdarcel-web
  DOCKERHUB_REPO: sheltertechsf/askdarcel-web

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      # Cache dependencies
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      
      # Install and build
      - run: npm ci
      - run: cp config.example.yml config.yml
      - run: CONFIG_YAML=config.docker.yml npm run build
      - run: touch version.json
      
      # Setup Docker
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      
      # Create metadata for both registries
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
            prefix=
            suffix=
          images: |
            ${{ env.GCP_REPO }}
            ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}}
      
      # Authenticate with Google Cloud
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      # Login to both registries
      - uses: docker/login-action@v3
        with:
          registry: us-west2-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}
      
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      # Build and push to both registries
      - uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - run: echo ${{ steps.docker_build.outputs.digest }}
